AMONADM()                                                            AMONADM()



NNAAMMEE
       amonadm - Manage Amon probes and alarms for a datacenter

SSYYNNOOPPSSIISS
       aammoonnaaddmm [OPTION...] command [command-specific arguments]

DDEESSCCRRIIPPTTIIOONN
       amonadm  manages  Amon  probes  and alarms for services within a single
       datacenter. The most common operation(s) will be listing,  viewing  and
       closing  alarms,  however probe management is typically done at deploy-
       ment time.

       A few notes on how amonadm sets up probes in Amon:

       +o   Each "service" is a probe group. This means that all alarms  for  a
           service  even on different machines only results in one page. It is
           expected that operators upon getting an alert/page investigate  the
           state of the system fully with aammoonnaaddmm aallaarrmmss.

       +o   Probes are added for a machine/role by combining the role name with
           all the probes under ccoommmmoonn; the exception is gglloobbaall, which is  for
           GZ (global zone) defined probes.

       +o   amonadm is not idempotent; calling aadddd twice on a role/machine will
           just double  up  all  the  probes.  Use  uuppddaattee  for  updating  all
           installed probes.



       The commands that you'll use on "live" systems are mostly:

       +o   probes/probe

       +o   alarms/alarm

       +o   close



       And then there are "deployment" related commands:

       +o   add

       +o   update

       +o   drop



       aadddd  puts  new probes into the system by reading all the definitions in
       ..//pprroobbeess. Note it doesn't try to  do  any  reconciliation  of  existing
       probes,  so  if  you specify that you want to add for a role or machine
       (or all), it's going to just append in everything it finds.

       uuppddaattee will do three things: update existing probes, drop  probes  that
       are  installed  but  no longer exist defiend in the probe files and add
       new probes.

       ddrroopp will remove every probe that matches the specified options.

       Before describing the detailed options for each  command,  some  sample
       workflows are given illustrating how to use amonadm.

EEXXAAMMPPLLEE:: MMaannaaggiinngg ooppeenn aallaarrmmss
       Here I inserted a sample "LogScan Error" alarm into a nnaammeesseerrvviiccee zone:



           amonadm alarms
           ID   ROLE               MACHINE  PROBE
           41   nameservice        12b82cd  ZK: logscan 'ERROR'



       Above we see an abbreviated listing of alarms that have fired.  We  can
       view details with:



           amonadm alarm 41
           [ {
             "id": 41,
             "machine": "12b82cda-6466-439f-8b82-cf0b2ecd90ca",
             "probe": {
               ...
             },
             "data": {
               "message": "Log \"/var/log/zookeeper/zookeeper.out\" matched /ERROR/.",
               "value": 1,
               "details": {
                 "matches": [ {
                   "match": "ERROR",
                   "context": "ERROR: example error from"
                 } ]
               }
             }
           } ]



       Assuming  we go and fix the actual problem, we can go close them (let's
       pretend there were several alarms for nameservice), and then we'll val-
       idate it actually closed:



           amonadm close -r nameservice
           amonadm alarms
           ID   ROLE               MACHINE  PROBE



EEXXAAMMPPLLEE:: AAddddiinngg pprroobbeess ttoo aa nneewwllyy ddeeppllooyyeedd zzoonnee
       Let's  suppose  we  just  deployed  a new nameservice zone 6655119966448844, so
       we'll go ahead and add probes to it:



           amonadm add -r nameservice -m 65196484
           added 7 probes
           amonadm probes -r nameservice
           ROLE               MACHINE  PROBE    NAME
           nameservice        12b82cd  23f439e  ZK: ruok
           nameservice        12b82cd  2c248d4  svcs: SMF maintenance
           nameservice        12b82cd  48e935b  free space on / below 20%
           nameservice        12b82cd  856c306  binder: logscan
           nameservice        12b82cd  d7489f5  ZK: logscan 'Connection refused'
           nameservice        12b82cd  ee38f4a  ZK: logscan 'ERROR'
           nameservice        12b82cd  ffc215d  mbackup: logs not uploaded
           nameservice        6519648  2f88b35  svcs: SMF maintenance
           nameservice        6519648  5aa69e8  binder: logscan
           nameservice        6519648  734b66e  free space on / below 20%
           nameservice        6519648  7ae261e  ZK: logscan 'ERROR'
           nameservice        6519648  8af3e9f  ZK: ruok
           nameservice        6519648  9b49474  mbackup: logs not uploaded
           nameservice        6519648  d9f99e6  ZK: logscan 'Connection refused'



       So now we can see that we've got a new set of probes  defined  for  the
       new system.

EEXXAAMMPPLLEE:: UUppddaattiinngg pprroobbeess ffoorr aa sseerrvviiccee
       If  we  added new probe files to the example nameservice role, we would
       update this service  probes  so  they  get  added  to  all  nameservice
       machines:



           amonadm update -r nameservice
           Probe 23f439e is unchanged
           Probe 2c248d4 is unchanged
           Probe 48e935b is unchanged
           added 0 probes
           updated 3 probes
           dropped 0 probes



EEXXAAMMPPLLEE:: DDeelleettiinngg pprroobbeess ffrroomm aann uunnddeeppllooyyeedd zzoonnee
       When  a zone is undeployed, you'll want to be sure there are no linger-
       ing alarms for it (which will show up as UUNNKKNNOOWWNN):



           amonadm drop -m 6519648
           dropped 7 probes



CCOOMMMMOONN OOPPTTIIOONNSS
       The following options are supported in all commands:

       --ff,, ----ffiillee  ccoonnffiigg__ffiillee  Use  the  specified  configuration  file.  The
       default  value  is  /opt/smartdc/sdc/etc/amonadm.config.json.  This can
       also be set in the environment using AAMMOONNAADDMM__CCFFGG__FFIILLEE.

       --hh,, ----hheellpp Print a help message and exit.

       --vv,, ----vveerrbboossee Turn on debug logging. This will be  bbuunnyyaann  output,  and
       will  be  on ssttddeerrrr. Use something like aammoonnaaddmm aallaarrmmss --vv 22>>&&11 || bbuunnyyaann
       to view.

CCOOMMMMAANNDDSS
       The following commands and options are supported:

   aadddd [[OOPPTTIIOONNSS......]]
       Add probes to a machine, all machines in a role, or probes for all sys-
       tems  in a datacenter. THe default with no options is to go through and
       add probes per role to all systems.

       The following options are supported:

       ----ccoonnccuurrrreennccyy LLIIMMIITT number of probes to add in parallel

       --mm MMAACCHHIINNEE__UUUUIIDD,, ----mmaacchhiinnee UUUUIIDD machine to add probes for

       --rr,, ----rroollee RROOLLEE role to create probes for (all machines)

   aadddd [[OOPPTTIIOONNSS......]]
       Updates all probes for a given role or machine.  This  is  functionally
       equivalent  to  drop-add, which means that: existing probes get updated
       if the have changed, new probes are added and installed probes that are
       not  defined  in the probe files anymore are dropped. The default is to
       update all probes for all roles.

       The following options are supported:

       ----ccoonnccuurrrreennccyy LLIIMMIITT number of probes to update in parallel

       --mm MMAACCHHIINNEE__UUUUIIDD,, ----mmaacchhiinnee UUUUIIDD machine to update probes for

       --rr,, ----rroollee RROOLLEE role to update probes for (all machines)

   ddrroopp [[OOPPTTIIOONNSS......]]
       Drops probes from a machine, all machines in a role, or probes for  all
       systems  in  a  datacenter.  The default with no options is to drop all
       probes.

       The following options are supported:

       ----ccoonnccuurrrreennccyy LLIIMMIITT number of probes to drop in parallel

       --mm MMAACCHHIINNEE__UUUUIIDD,, ----mmaacchhiinnee UUUUIIDD machine to add probes for

       --rr,, ----rroollee RROOLLEE role to create probes for (all machines)

   pprroobbeess [[OOPPTTIIOONNSS......]]
       Lists probes for a machine, all machines in a role, or all probes in  a
       datacenter. The default is to list all probes.

       The following options are supported:

       --HH do not emit header line

       --mm MMAACCHHIINNEE__UUUUIIDD,, ----mmaacchhiinnee UUUUIIDD machine to add probes for

       --rr,, ----rroollee RROOLLEE role to create probes for (all machines)

   pprroobbee [[OOPPTTIIOONNSS......]] PPRROOBBEE......
       Gets  probe(s)  details  (xargs  friendly).  Raw  JSON  for  probes  is
       returned.

   aallaarrmmss [[OOPPTTIIOONNSS......]]
       Lists alarms for a machine, all machines in a role, or all alarms in  a
       datacenter. The default is to list all alarms.

       The following options are supported:

       ----ccoonnccuurrrreennccyy LLIIMMIITT number of requests to make in parallel

       --HH do not emit header line

       --mm MMAACCHHIINNEE__UUUUIIDD,, ----mmaacchhiinnee UUUUIIDD machine to add probes for

       --rr,, ----rroollee RROOLLEE role to create probes for (all machines)

   aallaarrmm [[OOPPTTIIOONNSS......]] IIDD......
       Gets alarm(s) details (xargs friendly). Raw JSON is returned.

       The following options are supported:

       ----ccoonnccuurrrreennccyy LLIIMMIITT number of requests to make in parallel

   cclloossee [[OOPPTTIIOONNSS......]] IIDD......
       Closes alarms for a machine, all machines in a role, or all alarms in a
       datacenter. The default is to close all alarms.

       The following options are supported:

       ----ccoonnccuurrrreennccyy LLIIMMIITT number of requests to make in parallel

       --mm MMAACCHHIINNEE__UUUUIIDD,, ----mmaacchhiinnee UUUUIIDD machine to add probes for

       --rr,, ----rroollee RROOLLEE role to create probes for (all machines)

EENNVVIIRROONNMMEENNTT
       AAMMOONNAADDMM__CCFFGG__FFIILLEE In place of --ff,, ----ffiillee

DDIIAAGGNNOOSSTTIICCSS
       When using the --vv option, diagnostics will be sent to stderr in  bunyan
       output  format.  As  an  example  of  tracing  all  information about a
       request, try:



           $ amonadm alarms -v 2>&1 | bunyan



BBUUGGSS
       Report bugs at DevHub (MON) _h_t_t_p_s_:_/_/_d_e_v_h_u_b_._j_o_y_e_n_t_._c_o_m_/_j_i_r_a_/_b_r_o_w_s_e_/_M_O_N



                                  March 2014                         AMONADM()
